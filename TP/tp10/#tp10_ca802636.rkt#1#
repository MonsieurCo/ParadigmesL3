#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 59 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 5482 0 17 3 18 #"; Cours 10 : Types"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 29 3 11 #"#lang plait"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 17 3 25 #"; D\303\251finition des types ;"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #"; Repr\303\251sentation des expressions"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"numE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Number"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 3 #"idE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"plusE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"multE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"lamE"
0 0 25 3 2 #" ("
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 3 #") ("
0 0 14 3 8 #"par-type"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"appE"
0 0 25 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"trueE"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 6 #"falseE"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 3 #"ifE"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cnd"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 3 #"eqE"
0 0 25 3 2 #" ("
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"pairE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"fstE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"sndE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 7 #"letrecE"
0 0 25 3 2 #" ("
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 4 #" ) ("
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #"; Repr\303\251sentation du type des expressions"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"numT"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"boolT"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 3 #"res"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 4 #")]  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Boxof"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Optionof"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 5 #")))])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 17 3 51 #"; Repr\303\251sentation des liaisons identificateurs type"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 11 #"TypeBinding"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"tbind"
0 0 25 3 2 #" ("
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 3 #") ("
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #"; Environnement pour les types"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 25 3 1 #" "
0 0 14 3 7 #"TypeEnv"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 11 #"TypeBinding"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #"; Repr\303\251sentation des valeurs"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"numV"
0 0 25 3 2 #" ("
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Number"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"closV"
0 0 25 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 3 #") ("
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #") ("
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 5 #"pairV"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #") ("
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 6 #"undefV"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #"; Repr\303\251sentation des liaisons"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 25 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ["
0 0 14 3 4 #"bind"
0 0 25 3 2 #" ("
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 3 #") ("
0 0 14 3 3 #"val"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Boxof"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #"; Manipulation de l'environnement"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 25 3 1 #" "
0 0 14 3 3 #"Env"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"mt-env"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 17 3 22 #"; Analyse syntaxique ;"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ["
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"S-Exp"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 5 #"trueE"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 5 #"false"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 6 #"falseE"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 6 #"NUMBER"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 25 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 6 #"SYMBOL"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 25 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"plusE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"multE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #"}"
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #") ])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 3 #"eqE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 6 #"SYMBOL"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 3 #"]} "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 3 #"sll"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"lamE"
0 0 25 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 3 #"ifE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 6 #"SYMBOL"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 3 #"]} "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 3 #"sll"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"appE"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"lamE"
0 0 25 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 6 #"SYMBOL"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 3 #"]} "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #"}"
0 0 14 3 1 #"s"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 3 #"sll"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"letrecE"
0 0 25 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 25 3 1 #" "
0 0 14 3 3 #"sll"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"pairE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"fstE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"sndE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #"} "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"appE"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"invalid input\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ["
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"S-Exp"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 1 #"?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 5 #"boolT"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 14 3 3 #"ANY"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 25 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"parse-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 2 #"sl"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"invalid input\""
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 66
(4
 #"; sp\xC3\xA9cialisation de typecheck pour les op\xC3\xA9rateurs arith"
 #"m\xC3\xA9tiques"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"typecheck-op"
0 0 25 3 2 #" ["
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"TypeEnv"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"unify!"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #") "
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"unify!"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #") "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"numT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; unification de deux types"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unify!"
0 0 25 3 2 #" ["
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #"] ["
0 0 14 3 2 #"t2"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #"] ["
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Void"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"varT"
0 0 25 3 1 #" "
0 0 14 3 3 #"is1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 9 #"type-case"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Optionof"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 25 3 1 #" "
0 0 14 3 3 #"is1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 4 #"some"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 3 #") ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 4 #"none"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"t3"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"void"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            [("
0 0 14 3 6 #"occurs"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 3 #") ("
0 0 14 3 10 #"type-error"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"set-box!"
0 0 25 3 1 #" "
0 0 14 3 3 #"is1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"some"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 8 #"))]))])]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 4 #"varT"
0 0 25 3 1 #" "
0 0 14 3 3 #"is2"
0 0 25 3 3 #") ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 6 #"arrowT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 1 #" "
0 0 14 3 2 #"t4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 6 #"arrowT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t5"
0 0 25 3 1 #" "
0 0 14 3 2 #"t6"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 1 #" "
0 0 14 3 2 #"t5"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t4"
0 0 25 3 1 #" "
0 0 14 3 2 #"t6"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"type-error"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 4 #")])]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 5 #"prodT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 1 #" "
0 0 14 3 2 #"t4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"prodT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t5"
0 0 25 3 1 #" "
0 0 14 3 2 #"t6"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 1 #" "
0 0 14 3 2 #"t5"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t4"
0 0 25 3 1 #" "
0 0 14 3 2 #"t6"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"type-error"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 4 #")])]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"void"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 10 #"type-error"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 7 #"))])]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54
#"; r\303\251solution d'une variable (descente dans les alias)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 2 #" ["
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"varT"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 9 #"type-case"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Optionof"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 4 #"none"
0 0 25 3 2 #") "
0 0 14 3 1 #"t"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 4 #"some"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 3 #") ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 4 #")])]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"arrowT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 3 #") ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"prodT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 3 #") ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 56 #"; test de l'apparition de la variable t1 dans le type t2"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"occurs"
0 0 25 3 2 #" ["
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #"] ["
0 0 14 3 2 #"t2"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"arrowT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 1 #" "
0 0 14 3 2 #"t4"
0 0 25 3 3 #") ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 6 #"occurs"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 3 #") ("
0 0 14 3 6 #"occurs"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t4"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"varT"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 15 3 9 #"type-case"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Optionof"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 4 #"none"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 4 #"some"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 3 #") ("
0 0 14 3 6 #"occurs"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t3"
0 0 25 3 5 #")]))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; V\303\251rification des types ;"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 2 #" ["
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"TypeEnv"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"numE"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"idE"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 11 #"type-lookup"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"plusE"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 12 #"typecheck-op"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"multE"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 12 #"typecheck-op"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"lamE"
0 0 25 3 1 #" "
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 8 #"par-type"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"arrowT"
0 0 25 3 1 #" "
0 0 14 3 8 #"par-type"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 5 #"tbind"
0 0 25 3 1 #" "
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 8 #"par-type"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"appE"
0 0 25 3 1 #" "
0 0 14 3 3 #"fun"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"t1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ["
0 0 14 3 2 #"t2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 5 #")))])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 6 #"unify!"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 3 #"fun"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 6 #"arrowT"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 2 #") "
0 0 14 3 3 #"fun"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 6 #"unify!"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #") "
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 2 #"t2"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"trueE"
0 0 25 3 3 #") ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #") ]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"falseE"
0 0 25 3 3 #") ("
0 0 14 3 5 #"boolT"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"ifE"
0 0 25 3 1 #" "
0 0 14 3 3 #"cnd"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 5 #"cnd-t"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 3 #"cnd"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 15 3 5 #"begin"
0 0 25 3 3 #" ( "
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 5 #"cnd-t"
0 0 25 3 2 #" ("
0 0 14 3 5 #"boolT"
0 0 25 3 2 #") "
0 0 14 3 3 #"cnd"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"e1-t"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 61
#"                                                            ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"e2-t"
0 0 25 3 1 #"("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 63
#"                                                              ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 4 #"e2-t"
0 0 25 3 1 #" "
0 0 14 3 4 #"e1-t"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 2 #") "
0 0 14 3 4 #"e1-t"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"eqE"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 4 #")  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 4 #"e1-T"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 4 #"e2-T"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 4 #"e1-T"
0 0 25 3 2 #" ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #") "
0 0 14 3 2 #"e1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 4 #"e2-T"
0 0 25 3 1 #" "
0 0 14 3 4 #"e1-T"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 5 #"boolT"
0 0 25 3 6 #") )))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"pairE"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 4 #" ) ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" [("
0 0 14 3 2 #"t1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" [("
0 0 14 3 2 #"t2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"l"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"r"
0 0 25 3 4 #" ) ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"t2"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"fstE"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"pp"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"pp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 6 #"))) ) "
0 0 14 3 1 #"p"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 7 #"prodT-l"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"pp"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"sndE"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #")("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"pp"
0 0 25 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 2 #"pp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 5 #"))) ("
0 0 14 3 4 #"varT"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 4 #"none"
0 0 25 3 6 #"))) ) "
0 0 14 3 1 #"p"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 7 #"prodT-r"
0 0 25 3 2 #" ("
0 0 14 3 7 #"resolve"
0 0 25 3 1 #" "
0 0 14 3 2 #"pp"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"letrecE"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" [("
0 0 14 3 7 #"new-env"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 5 #"tbind"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 15 3 3 #"let"
0 0 25 3 4 #" [( "
0 0 14 3 8 #"type-arg"
0 0 25 3 3 #" ( "
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 15 3 3 #"let"
0 0 25 3 4 #" [( "
0 0 14 3 9 #"body-type"
0 0 25 3 3 #" ( "
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 4 #" ))]"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 6 #"unify!"
0 0 25 3 1 #" "
0 0 14 3 8 #"type-arg"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 14 3 9 #"body-type"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                              "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";(let [(new-env (extend-env (tbind s t) env))]"
0 0 25 29 1 #"\n"
0 0 17 3 73
(5
 #";                             (let [( type-arg ( typecheck arg new-en"
 #"v))]"
) 0 0 25 29 1 #"\n"
0 0 17 3 77
(6
 #";                              (let [( body-type ( typecheck body new"
 #"-env ))]"
) 0 0 25 29 1 #"\n"
0 0 17 3 57 #";                               (begin (display type-arg)"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";                                      (cond"
0 0 25 29 1 #"\n"
0 0 17 3 165
(7
 #";                                             [(arrowT? t) (begin (un"
 #"ify! type-arg ( arrowT-res  t) arg ) (unify! body-type ( arrowT-res  "
 #"t) body)(display body-type)"
) 0 0 25 29 1 #"\n"
0 0 17 3 87
(8
 #";                                                               (if ("
 #"equal? type-arg t)"
) 0 0 25 29 1 #"\n"
0 0 17 3 13 #";            "
0 0 25 29 1 #"\n"
0 0 17 3 101
(9
 #";                                                           (if (equa"
 #"l? body-type  ( arrowT-res  t) )"
) 0 0 25 29 1 #"\n"
0 0 17 3 78
(10
 #";                                                                    "
 #"body-type"
) 0 0 25 29 1 #"\n"
0 0 17 3 132
(11
 #";                                                                   ("
 #"error 'typecheck \"typecheck\"))(error 'typecheck \"typecheck\")))]"
) 0 0 25 29 1 #"\n"
0 0 17 3 151
(12
 #";                                        [else (begin (unify! type-ar"
 #"g   t arg ) (unify! body-type   t body)(display body-type) (if (equal"
 #"? type-arg t)"
) 0 0 25 29 1 #"\n"
0 0 17 3 25 #";                        "
0 0 25 29 1 #"\n"
0 0 17 3 88
(13
 #";                                                            (if (equ"
 #"al? body-type   t )"
) 0 0 25 29 1 #"\n"
0 0 17 3 72
(14
 #";                                                              body-t"
 #"ype"
) 0 0 25 29 1 #"\n"
0 0 17 3 126
(15
 #";                                                             (error "
 #"'typecheck \"typecheck\"))(error 'typecheck \"typecheck\")))]"
) 0 0 25 29 1 #"\n"
0 0 17 3 62
#";                                                       )))))]"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 43
#"; Concat\303\251nation de cha\303\256nes de caract\303\250res"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cat"
0 0 25 3 2 #" ["
0 0 14 3 7 #"strings"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 6 #"String"
0 0 25 3 4 #")]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"String"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #" "
0 0 14 3 7 #"strings"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Message d'erreur"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"type-error"
0 0 25 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 13 #"expected-type"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 3 #"] ["
0 0 14 3 10 #"found-type"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"typecheck"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cat"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"expression \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 19 3 18 #"\", expected type \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 1 #" "
0 0 14 3 13 #"expected-type"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 19 3 15 #"\", found type \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 1 #" "
0 0 14 3 10 #"found-type"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Message d'erreur"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"type-error-function"
0 0 25 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 10 #"found-type"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"typecheck"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cat"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"expression \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 19 3 22 #"\", expected function \""
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 19 3 15 #"\", found type \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 1 #" "
0 0 14 3 10 #"found-type"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Message d'erreur"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"type-error-product"
0 0 25 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 10 #"found-type"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"typecheck"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cat"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"expression \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 2 #"  "
0 0 14 3 4 #"expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 19 3 21 #"\", expected product \""
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 19 3 15 #"\", found type \""
0 0 25 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 25 3 1 #" "
0 0 14 3 10 #"found-type"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #"; Recherche d'un identificateur dans l'environnement"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"type-lookup"
0 0 25 3 2 #" ["
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"TypeEnv"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"free identifier\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 10 #"tbind-name"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #"))) ("
0 0 14 3 10 #"tbind-type"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"type-lookup"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 17 3 19 #"; Interpr\303\251tation ;"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #"; Interpr\303\251teur"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 2 #" ["
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Env"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"numE"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"idE"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 6 #"lookup"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"plusE"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 4 #"num+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"multE"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 4 #"num*"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"lamE"
0 0 25 3 1 #" "
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 8 #"par-type"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #") ("
0 0 14 3 5 #"closV"
0 0 25 3 1 #" "
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"appE"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 5 #"closV"
0 0 25 3 1 #" "
0 0 14 3 3 #"par"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 5 #"c-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 25 3 1 #" "
0 0 14 3 3 #"par"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))) "
0 0 14 3 5 #"c-env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 19 3 16 #"\"not a function\""
0 0 25 3 4 #")])]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"ifE"
0 0 25 3 1 #" "
0 0 14 3 3 #"cnd"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 3 #" )("
0 0 15 3 9 #"type-case"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 3 #"cnd"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                       [("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"not a number\""
0 0 25 3 4 #")])]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"trueE"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"falseE"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"eqE"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 4 #" ) ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 4 #"e1-V"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #" )])"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 4 #"e2-V"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 4 #"e1-V"
0 0 25 3 1 #" "
0 0 14 3 4 #"e2-V"
0 0 25 3 4 #" ) ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #" ) ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"pairE"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 5 #"pairV"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #" ) ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #" ))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"fstE"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"pp"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"pairV?"
0 0 25 3 1 #" "
0 0 14 3 2 #"pp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"pairV-f"
0 0 25 3 2 #"  "
0 0 14 3 2 #"pp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a pair\""
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"sndE"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"pp"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"pairV?"
0 0 25 3 1 #" "
0 0 14 3 2 #"pp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"pairV-s"
0 0 25 3 2 #"  "
0 0 14 3 2 #"pp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not a pair\""
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"letrecE"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 3 #"box"
0 0 25 3 2 #" ("
0 0 14 3 6 #"undefV"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 7 #"new-env"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"  "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"set-box!"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #"; Recherche d'un identificateur dans l'environnement"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 25 3 2 #" ["
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"Env"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"lookup"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"free identifier\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 9 #"bind-name"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #"))) ("
0 0 14 3 5 #"unbox"
0 0 25 3 2 #" ("
0 0 14 3 8 #"bind-val"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 61
(16
 #"; V\xC3\xA9rification des types pour les op\xC3\xA9rations arithm\xC3"
 #"\xA9tiques"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"num-op"
0 0 25 3 2 #" ["
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Number"
0 0 25 3 1 #" "
0 0 14 3 6 #"Number"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 6 #"Number"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #"] ["
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numV?"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 5 #"numV?"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"numV"
0 0 25 3 2 #" ("
0 0 14 3 2 #"op"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 6 #"numV-n"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"not a number\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #"; Sp\303\251cialisation de num-op pour l'addition"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"num+"
0 0 25 3 2 #" ["
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #"] ["
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"num-op"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 50 #"; Sp\303\251cialisation de num-op pour la multiplication"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"num*"
0 0 25 3 2 #" ["
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #"] ["
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"num-op"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 17 3 9 #"; Tests ;"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 2 #" ["
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"S-Exp"
0 0 25 3 3 #"]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"Value"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 4 #"expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"typecheck"
0 0 25 3 1 #" "
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 6 #"mt-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"interp"
0 0 25 3 1 #" "
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 6 #"mt-env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 2 #" ["
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 5 #"S-Exp"
0 0 25 3 4 #" ]) "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"Type"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  ( "
0 0 14 3 7 #"resolve"
0 0 25 3 3 #" ( "
0 0 14 3 9 #"typecheck"
0 0 25 3 3 #" ( "
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #") "
0 0 14 3 6 #"mt-env"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                 { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      {"
0 0 14 3 1 #"+"
0 0 25 3 3 #" { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 3 #"} }"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                         { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"} } } } } }]}"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             { "
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 4 #"numT"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"} "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 5 #"boolT"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #"}})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 6 #" }) ( "
0 0 14 3 5 #"prodT"
0 0 25 3 3 #" ( "
0 0 14 3 4 #"numT"
0 0 25 3 5 #" ) ( "
0 0 14 3 5 #"boolT"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"fst"
0 0 25 3 3 #" { "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 8 #" } }) ( "
0 0 14 3 4 #"numT"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"snd"
0 0 25 3 3 #" { "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 8 #" } }) ( "
0 0 14 3 5 #"boolT"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 7 #" )]} { "
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 6 #"arrowT"
0 0 25 3 3 #" ( "
0 0 14 3 5 #"prodT"
0 0 25 3 3 #" ( "
0 0 14 3 4 #"numT"
0 0 25 3 5 #" ) ( "
0 0 14 3 5 #"boolT"
0 0 25 3 6 #" )) ( "
0 0 14 3 4 #"numT"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 7 #" )]} { "
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #"}})"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 8 #" )]} {  "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 6 #"arrowT"
0 0 25 3 3 #" ( "
0 0 14 3 5 #"prodT"
0 0 25 3 3 #" ( "
0 0 14 3 4 #"numT"
0 0 25 3 5 #" ) ( "
0 0 14 3 4 #"numT"
0 0 25 3 6 #" )) ( "
0 0 14 3 5 #"boolT"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #"]} "
0 0 14 3 1 #"x"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 3 #") {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 5 #"}}]} "
0 0 22 3 1 #"0"
0 0 25 3 3 #"}) "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 3 #") {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 5 #"}}]} "
0 0 22 3 1 #"0"
0 0 25 3 4 #"}) ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 3 #"]} "
0 0 14 3 1 #"x"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                              "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 47 #"                                              {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"} "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 51 #"                                                  {"
0 0 14 3 1 #"+"
0 0 25 3 1 #"{"
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 2 #"}}"
0 0 25 29 1 #"\n"
0 0 25 3 53 #"                                                    {"
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 8 #"}}}}}}]}"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          {"
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 5 #"}}) ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 3 #" { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 3 #"]} "
0 0 14 3 1 #"x"
0 0 25 3 3 #"}]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #" {"
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #"}]}"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 14 3 1 #"f"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 6 #"arrowT"
0 0 25 3 3 #" ( "
0 0 14 3 4 #"numT"
0 0 25 3 5 #" ) ( "
0 0 14 3 4 #"numT"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                 { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      {"
0 0 14 3 1 #"+"
0 0 25 3 3 #" { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 3 #"} }"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                         { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"} } } } } }]}"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             { "
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 4 #"numT"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 9 #"apply-fun"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                          {"
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 29 1 #"\n"
0 0 25 3 47 #"                                              {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"}}"
0 0 25 29 1 #"\n"
0 0 25 3 47 #"                                              {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 6 #"}}}}]}"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         {{"
0 0 14 3 9 #"apply-fun"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 2 #"} "
0 0 22 3 1 #"3"
0 0 25 3 3 #"}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"numT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 5 #"}}}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"numT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                 { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      {"
0 0 14 3 1 #"+"
0 0 25 3 3 #" { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 3 #"} }"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                         { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"} } } } } }]}"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             { "
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 4 #"6765"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 5 #"}}}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"numT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 6 #"}}}}]}"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      {"
0 0 14 3 1 #"f"
0 0 25 3 2 #" {"
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"}}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"  "
0 0 22 3 1 #"1"
0 0 25 3 6 #" } ) ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"} "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 5 #" }) ("
0 0 14 3 5 #"pairV"
0 0 25 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"fst"
0 0 25 3 3 #" { "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 7 #" } }) ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"snd"
0 0 25 3 3 #" { "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 7 #" } }) ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 7 #" )]} { "
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 6 #"arrowT"
0 0 25 3 3 #" ( "
0 0 14 3 5 #"prodT"
0 0 25 3 3 #" ( "
0 0 14 3 4 #"numT"
0 0 25 3 5 #" ) ( "
0 0 14 3 5 #"boolT"
0 0 25 3 6 #" )) ( "
0 0 14 3 4 #"numT"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                 { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      {"
0 0 14 3 1 #"+"
0 0 25 3 3 #" { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 3 #"} }"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                         { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"} } } } } }]}"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             { "
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 3 #") {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 5 #"}}]} "
0 0 22 3 1 #"0"
0 0 25 3 3 #"}) "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 3 #") {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 5 #"}}]} "
0 0 22 3 1 #"0"
0 0 25 3 4 #"}) ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 3 #" { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 3 #"]} "
0 0 14 3 1 #"x"
0 0 25 3 3 #"}]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #" {"
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #"}]}"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 14 3 1 #"f"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ( "
0 0 14 3 6 #"arrowT"
0 0 25 3 3 #" ( "
0 0 14 3 4 #"numT"
0 0 25 3 5 #" ) ( "
0 0 14 3 4 #"numT"
0 0 25 3 4 #" )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                 { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      {"
0 0 14 3 1 #"+"
0 0 25 3 3 #" { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 3 #"} }"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                         { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"} } } } } }]}"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             { "
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 5 #"}}) ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 9 #"apply-fun"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                          {"
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 29 1 #"\n"
0 0 25 3 47 #"                                              {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"}}"
0 0 25 29 1 #"\n"
0 0 25 3 47 #"                                              {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"]} {"
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 6 #"}}}}]}"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         {{"
0 0 14 3 9 #"apply-fun"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 2 #"} "
0 0 22 3 1 #"3"
0 0 25 3 3 #"}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 5 #"}}) ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #") ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 5 #"}}}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"arrowT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"prodT"
0 0 25 3 2 #" ("
0 0 14 3 5 #"boolT"
0 0 25 3 3 #") ("
0 0 14 3 4 #"numT"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"numT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 4 #"test"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         { "
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                 { "
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      {"
0 0 14 3 1 #"+"
0 0 25 3 3 #" { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 3 #"} }"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                         { "
0 0 14 3 3 #"fib"
0 0 25 3 2 #" {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 13 #"} } } } } }]}"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"             { "
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 4 #"} })"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 4 #"6765"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"{ "
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #" })"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #"}})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"( "
0 0 14 3 8 #"test/exn"
0 0 25 3 3 #" ( "
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 2 #" ("
0 0 14 3 11 #"interp-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 3 #"let"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 4 #"]} {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 6 #"}}}}]}"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      {"
0 0 14 3 1 #"f"
0 0 25 3 2 #" {"
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"}}})"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"numV"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 25 3 2 #" ("
0 0 14 3 14 #"typecheck-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"{"
0 0 15 3 6 #"letrec"
0 0 25 3 3 #" {["
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       {"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" {["
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #"]}"
0 0 25 29 1 #"\n"
0 0 25 3 42 #"                                         {"
0 0 14 3 2 #"if"
0 0 25 3 2 #" {"
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #"}"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                             "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             {"
0 0 14 3 1 #"f"
0 0 25 3 2 #" {"
0 0 14 3 3 #"snd"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 6 #"}}}}]}"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                             "
0 0 14 3 1 #"f"
0 0 25 3 2 #"})"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 19 3 11 #"\"typecheck\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0           0
