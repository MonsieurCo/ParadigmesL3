#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 63 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 17 #"DejaVu Sans Mono\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 64 128 128 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 64 128 128 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 255 0 255 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1 1 1 255 0 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 128 128 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 128 128 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 64 0 0 0 -1 -1
2 36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 64 0 0 0 -1 -1
2 16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 3312 0 18 3 62
(5
 #"; Cours 06 : Interpr\xC3\xA9teur pour le lambda-calcul \xC3\xA0 compl"
 #"\xC3\xA9ter"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 32 3 11 #"#lang plait"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 15 #";;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 18 3 15 #"; Expressions ;"
0 0 28 29 1 #"\n"
0 0 18 3 15 #";;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 24 #"; Langage interm\303\251diaire"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 11 #"define-type"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"idS"
0 0 28 3 2 #" ("
0 0 14 3 1 #"s"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"lamS"
0 0 28 3 2 #" ("
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"body"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"appS"
0 0 28 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"args"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"letS"
0 0 28 3 2 #" ("
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"args"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"body"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"numS"
0 0 28 3 2 #" ("
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Number"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"add1S"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"plusS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"multS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"trueS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 6 #"falseS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"ifS"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cnd"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #") ("
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #") ("
0 0 14 3 1 #"r"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 4 #")]  "
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"zeroS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"pairS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"fstS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"sndS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 5 #"sub1S"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 6 #"minusS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"divS"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 1 #" "
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 7 #"letrecS"
0 0 28 3 2 #" ("
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"body"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 29 #"; Le langage du lambda-calcul"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 11 #"define-type"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 3 #"idE"
0 0 28 3 2 #" ("
0 0 14 3 1 #"s"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"lamE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 3 #") ("
0 0 14 3 4 #"body"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ["
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 22 #";;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 18 3 22 #"; Analyse syntaxique ;"
0 0 28 29 1 #"\n"
0 0 18 3 22 #";;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 28 3 1 #" "
0 0 14 3 1 #"f"
0 0 28 3 1 #" "
0 0 14 3 1 #"g"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" ("
0 0 14 3 1 #"x"
0 0 28 3 3 #") ("
0 0 14 3 1 #"f"
0 0 28 3 2 #" ("
0 0 14 3 1 #"g"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ["
0 0 14 3 1 #"s"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 5 #"S-Exp"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 6 #"NUMBER"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 4 #"numS"
0 0 28 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 36 #"; ensembles de symboles pr\303\251d\303\251finis"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 4 #"add1"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"add1S"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"plusS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 4 #"sub1"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"sub1S"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 6 #"minusS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"multS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 1 #"/"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 4 #"divS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 4 #"true"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"trueS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 5 #"false"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 6 #"falseS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 5 #"zero?"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"zeroS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 4 #"pair"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 5 #"pairS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 3 #"fst"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 4 #"fstS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 3 #"snd"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 4 #"sndS"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 14 3 6 #"SYMBOL"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idS"
0 0 28 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" {"
0 0 14 3 6 #"SYMBOL"
0 0 28 3 1 #" "
0 0 14 3 6 #"SYMBOL"
0 0 28 3 1 #" "
0 0 14 3 3 #"..."
0 0 28 3 2 #"} "
0 0 14 3 3 #"ANY"
0 0 28 3 2 #"} "
0 0 14 3 1 #"s"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 14 3 4 #"lamS"
0 0 28 3 2 #" ("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 14 3 13 #"s-exp->symbol"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 2 #" ("
0 0 14 3 6 #"second"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 5 #"))) ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 5 #"third"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 16 3 3 #"let"
0 0 28 3 3 #" {["
0 0 14 3 6 #"SYMBOL"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 3 #"] ["
0 0 14 3 6 #"SYMBOL"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 2 #"] "
0 0 14 3 3 #"..."
0 0 28 3 2 #"} "
0 0 14 3 3 #"ANY"
0 0 28 3 2 #"} "
0 0 14 3 1 #"s"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 6 #"substs"
0 0 28 3 2 #" ("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 14 3 11 #"s-exp->list"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 2 #" ("
0 0 14 3 6 #"second"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 5 #")))])"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 4 #"letS"
0 0 28 3 2 #" ("
0 0 14 3 3 #"map"
0 0 28 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 28 3 1 #" "
0 0 14 3 13 #"s-exp->symbol"
0 0 28 3 1 #" "
0 0 14 3 5 #"first"
0 0 28 3 2 #") "
0 0 14 3 6 #"substs"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"               ("
0 0 14 3 3 #"map"
0 0 28 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 28 3 1 #" "
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 14 3 6 #"second"
0 0 28 3 2 #") "
0 0 14 3 6 #"substs"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"               ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 5 #"third"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 6 #")))))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 2 #"} "
0 0 14 3 1 #"s"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 14 3 3 #"ifS"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 6 #"second"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 5 #"third"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 16 3 6 #"letrec"
0 0 28 3 3 #" {["
0 0 14 3 6 #"SYMBOL"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 3 #"]} "
0 0 14 3 3 #"ANY"
0 0 28 3 2 #"} "
0 0 14 3 1 #"s"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 6 #"substs"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 2 #" ("
0 0 14 3 6 #"second"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 6 #"))))])"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 7 #"letrecS"
0 0 28 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 6 #"substs"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 6 #"second"
0 0 28 3 1 #" "
0 0 14 3 6 #"substs"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 5 #"third"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 8 #")))))]  "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 14 3 3 #"ANY"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 28 3 1 #" "
0 0 14 3 3 #"..."
0 0 28 3 2 #"} "
0 0 14 3 1 #"s"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"     ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 28 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #")])"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"       ("
0 0 14 3 4 #"appS"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 14 3 5 #"parse"
0 0 28 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 28 3 1 #" "
0 0 14 3 2 #"sl"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 20 3 15 #"\"invalid input\""
0 0 28 3 4 #")]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 18 3 31 #"; Retrait du sucre syntaxique ;"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 9 #"fold-pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 1 #"="
0 0 28 3 2 #" ("
0 0 14 3 6 #"length"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 2 #") "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 14 3 4 #"lamE"
0 0 28 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 14 3 4 #"lamE"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 3 #") ("
0 0 14 3 9 #"fold-pars"
0 0 28 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 2 #") "
0 0 14 3 4 #"body"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"fold-app"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 1 #"="
0 0 28 3 2 #" ("
0 0 14 3 6 #"length"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 2 #") "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 8 #"fold-app"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 4 #")) ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"first"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"numerise"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 3 #") ("
0 0 14 3 8 #"numerise"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 8 #" )))])) "
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 18 3 54 #";  {let {[id rhs]} body} <=>  {{lambda {id} body} rhs}"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ["
0 0 14 3 1 #"e"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 4 #"ExpS"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"idS"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"lamS"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 2 #">="
0 0 28 3 2 #" ("
0 0 14 3 6 #"length"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 2 #") "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 31 #"                              ("
0 0 14 3 9 #"fold-pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 31 #"                              ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 20 3 17 #"\"not implemented\""
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"appS"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 3 #") ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 2 #">="
0 0 28 3 2 #" ("
0 0 14 3 6 #"length"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 2 #") "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                             ("
0 0 14 3 8 #"fold-app"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                             ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 20 3 17 #"\"not implemented\""
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"letS"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"args"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appS"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamS"
0 0 28 3 1 #" "
0 0 14 3 4 #"pars"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 2 #") "
0 0 14 3 4 #"args"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"numS"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 5 #")  ( "
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 3 #"  ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 8 #"numerise"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"add1S"
0 0 28 3 4 #") ( "
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 3 #" ( "
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 3 #" )("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 8 #"))))) )]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"plusS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"m"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"m"
0 0 28 3 5 #")  ( "
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 3 #" ( "
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 3 #" )("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 10 #"))))) )) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"multS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"m"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"m"
0 0 28 3 3 #") ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"plusS"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 5 #"))) ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"numS"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #")))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"trueS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 6 #"falseS"
0 0 28 3 2 #")("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"ifS"
0 0 28 3 1 #" "
0 0 14 3 3 #"cnd"
0 0 28 3 2 #"  "
0 0 14 3 1 #"l"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 5 #" ) ( "
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 3 #"cnd"
0 0 28 3 4 #") ( "
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"d"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 1 #"l"
0 0 28 3 6 #"))) ( "
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"d"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 5 #"))) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"_"
0 0 28 3 6 #"))   ]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 94
(6
 #"; [(zeroS) (lamE 'n (appE  (idE 'n) (appE (lamE 'x (desugar (falseS))"
 #") (desugar (trueS) )) ))]"
) 0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"zeroS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 6 #"falseS"
0 0 28 3 7 #"))) ) ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"trueS"
0 0 28 3 7 #") )) )]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"pairS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 3 #"sel"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 3 #"sel"
0 0 28 3 4 #" ) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 7 #") ))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"fstS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"trueS"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"sndS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 6 #"falseS"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 5 #"sub1S"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"fstS"
0 0 28 3 3 #"))("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 3 #") ("
0 0 14 3 5 #"shift"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"pairS"
0 0 28 3 4 #")) ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"numS"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 5 #"))) ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"numS"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 7 #"))))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 6 #"minusS"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"m"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"m"
0 0 28 3 2 #")("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"sub1S"
0 0 28 3 6 #")))  ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"n"
0 0 28 3 5 #"))))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 7 #"letrecS"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 6 #"mk-rec"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 39 #"                                      ]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 9 #"\316\273fac.fac"
0 0 18 3 2 #" ("
0 0 18 3 9 #"\316\273f.\316\273x.f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"f"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 10 #"))))))) (("
0 0 18 3 12 #"\316\273body-proc."
0 0 18 3 1 #"("
0 0 18 3 7 #"\316\273fX.fX"
0 0 18 3 1 #" "
0 0 18 3 2 #"fX"
0 0 18 3 3 #") ("
0 0 18 3 5 #"\316\273fX."
0 0 18 3 1 #"("
0 0 18 3 13 #"\316\273f.body-proc"
0 0 18 3 1 #" "
0 0 18 3 1 #"f"
0 0 18 3 2 #")("
0 0 18 3 6 #"\316\273x.fX"
0 0 18 3 1 #" "
0 0 18 3 2 #"fX"
0 0 18 3 1 #" "
0 0 18 3 4 #"x)))"
0 0 28 29 1 #"\n"
0 0 28 3 44 #"                                            "
0 0 28 29 1 #"\n"
0 0 18 3 3 #"; ("
0 0 18 3 10 #"\316\273fac.\316\273n."
0 0 18 3 1 #"("
0 0 18 3 5 #"\316\273n.n"
0 0 18 3 2 #" ("
0 0 18 3 13 #"\316\273_.\316\273x.\316\273y.y"
0 0 18 3 3 #") ("
0 0 18 3 9 #"\316\273x.\316\273y.x"
0 0 18 3 3 #")) "
0 0 18 3 1 #"n"
0 0 18 3 2 #" ("
0 0 18 3 13 #"\316\273_.\316\273f.\316\273x.f"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 3 #") ("
0 0 18 3 4 #"\316\273_."
0 0 18 3 10 #"(\316\273n.\316\273m.n"
0 0 28 29 1 #"\n"
0 0 18 3 3 #";(("
0 0 18 3 9 #"\316\273n.\316\273m.n"
0 0 18 3 2 #" ("
0 0 18 3 13 #"\316\273n.\316\273f.\316\273x.f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"n"
0 0 18 3 1 #" "
0 0 18 3 1 #"f"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 3 #")) "
0 0 18 3 1 #"m"
0 0 18 3 2 #") "
0 0 18 3 1 #"m"
0 0 18 3 3 #") ("
0 0 18 3 9 #"\316\273f.\316\273x.x"
0 0 18 3 3 #")) "
0 0 18 3 1 #"n"
0 0 18 3 2 #" ("
0 0 18 3 3 #"fac"
0 0 18 3 3 #" (("
0 0 18 3 9 #"\316\273n.\316\273m.m"
0 0 18 3 3 #" (("
0 0 18 3 12 #"\316\273shift.\316\273n."
0 0 18 3 6 #"(\316\273p.p"
0 0 28 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 9 #"\316\273x.\316\273y.x"
0 0 18 3 3 #"))("
0 0 18 3 1 #"n"
0 0 18 3 1 #" "
0 0 18 3 5 #"shift"
0 0 18 3 3 #" (("
0 0 18 3 17 #"\316\273x.\316\273y.\316\273sel.sel"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"y"
0 0 18 3 2 #")("
0 0 18 3 9 #"\316\273f.\316\273x.x"
0 0 18 3 3 #") ("
0 0 18 3 9 #"\316\273f.\316\273x.x"
0 0 18 3 5 #"))))("
0 0 18 3 4 #"\316\273p."
0 0 18 3 1 #"("
0 0 18 3 17 #"\316\273x.\316\273y.\316\273sel.sel"
0 0 18 3 2 #" x"
0 0 28 29 1 #"\n"
0 0 18 3 1 #";"
0 0 18 3 1 #"y"
0 0 18 3 3 #")(("
0 0 18 3 5 #"\316\273p.p"
0 0 18 3 2 #" ("
0 0 18 3 9 #"\316\273x.\316\273y.y"
0 0 18 3 3 #")) "
0 0 18 3 1 #"p"
0 0 18 3 4 #") (("
0 0 18 3 13 #"\316\273n.\316\273f.\316\273x.f"
0 0 18 3 2 #" ("
0 0 18 3 1 #"n"
0 0 18 3 1 #" "
0 0 18 3 1 #"f"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 4 #"))(("
0 0 18 3 5 #"\316\273p.p"
0 0 18 3 2 #" ("
0 0 18 3 9 #"\316\273x.\316\273y.y"
0 0 18 3 3 #")) "
0 0 18 3 1 #"p"
0 0 18 3 5 #")))) "
0 0 18 3 1 #"n"
0 0 18 3 2 #") "
0 0 18 3 1 #"n"
0 0 18 3 2 #" ("
0 0 18 3 10 #"\316\273f.\316\273x.fx"
0 0 18 3 5 #")))) "
0 0 18 3 3 #"_))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 113
(7
 #";\"(\xCE\xBBfac.fac (\xCE\xBBf.\xCE\xBBx.f (f (f (f (f (f x))))))) (("
 #"\xCE\xBBbody-proc.(\xCE\xBBfX.fX fX) (\xCE\xBBfX.(\xCE\xBBf.body-proc"
 #" f)(\xCE\xBBx.fX fX x)))"
) 0 0 28 29 1 #"\n"
0 0 18 3 124
(8
 #";(\xCE\xBBfac.fac (\xCE\xBBn.(\xCE\xBBn.n (\xCE\xBBx.\xCE\xBBx.\xCE"
 #"\xBBy.y) (\xCE\xBBx.\xCE\xBBy.x)) n (\xCE\xBBd.\xCE\xBBf.\xCE\xBBx.f "
 #"x) (\xCE\xBBd.(\xCE\xBBn.\xCE\xBBm.m ((\xCE\xBBn.\xCE\xBBm.m (\xCE"
 #"\xBBn.\xCE\xBBf.\xCE\xBBx.f (n f x))"
) 0 0 28 29 1 #"\n"
0 0 18 3 117
(9
 #";n) n) (\xCE\xBBf.\xCE\xBBx.x)) n (fac ((\xCE\xBBn.\xCE\xBBm.m (\xCE"
 #"\xBBn.(\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.x))(n (\xCE\xBBp.(\xCE\xBBx."
 #"\xCE\xBBy.\xCE\xBBsel.sel x y)((\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) "
 #"p)"
) 0 0 28 29 1 #"\n"
0 0 18 3 123
(10
 #";((\xCE\xBBn.\xCE\xBBf.\xCE\xBBx.f (n f x))((\xCE\xBBp.p (\xCE\xBBx."
 #"\xCE\xBBy.y)) p))) ((\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)(\xCE"
 #"\xBBf.\xCE\xBBx.x) (\xCE\xBBf.\xCE\xBBx.x)))) n) n (\xCE\xBBf.\xCE"
 #"\xBBx.f x))))"
) 0 0 28 29 1 #"\n"
0 0 18 3 17 #"; (\316\273f.\316\273x.x))))\""
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 18 3 113 7 0 0 28 29 1 #"\n"
0 0 18 3 1 #";"
0 0 28 29 1 #"\n"
0 0 18 3 142
(11
 #";          (\xCE\xBBn.(\xCE\xBBn.n (\xCE\xBBx.\xCE\xBBx.\xCE\xBBy.y) "
 #"(\xCE\xBBx.\xCE\xBBy.x)) n (\xCE\xBBd.\xCE\xBBf.\xCE\xBBx.f x) (\xCE"
 #"\xBBd.(\xCE\xBBn.\xCE\xBBm.m ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn.\xCE"
 #"\xBBf.\xCE\xBBx.f (n f x)) n) n) (\xCE\xBBf.\xCE\xBBx.x))"
) 0 0 28 29 1 #"\n"
0 0 18 3 124
(12
 #"; n (fac ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn.(\xCE\xBBp.p (\xCE\xBBx."
 #"\xCE\xBBy.x))(n (\xCE\xBBp.(\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)("
 #"(\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) p) ((\xCE\xBBn.\xCE\xBBf.\xCE"
 #"\xBBx.f (n f x))"
) 0 0 28 29 1 #"\n"
0 0 18 3 114
(13
 #";((\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) p))) ((\xCE\xBBx.\xCE\xBBy."
 #"\xCE\xBBsel.sel x y)(\xCE\xBBf.\xCE\xBBx.x) (\xCE\xBBf.\xCE\xBBx.x)))"
 #") n) n (\xCE\xBBf.\xCE\xBBx.f x)))) (\xCE\xBBf.\xCE\xBBx.x)))\""
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 18 3 112
(14
 #";\"(\xCE\xBBfac.fac (\xCE\xBBf.\xCE\xBBx.f (f (f (f (f (f x))))))) (("
 #"\xCE\xBBbody-proc.(\xCE\xBBfX.fX fX) (\xCE\xBBfX.\xCE\xBBf.body-proc "
 #"f (\xCE\xBBx.fX fX x)))"
) 0 0 28 29 1 #"\n"
0 0 18 3 119
(15
 #";(\xCE\xBBn.(\xCE\xBBn.n (\xCE\xBBx.\xCE\xBBx.\xCE\xBBy.y) (\xCE\xBBx"
 #".\xCE\xBBy.x)) n (\xCE\xBBd.\xCE\xBBf.\xCE\xBBx.f x) (\xCE\xBBd.(\xCE"
 #"\xBBn.\xCE\xBBm.m ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn.\xCE\xBBf.\xCE"
 #"\xBBx.f (n f x)) n) n)"
) 0 0 28 29 1 #"\n"
0 0 18 3 112
(16
 #"; (\xCE\xBBf.\xCE\xBBx.x)) n (fac ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn."
 #"(\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.x))(n (\xCE\xBBp.(\xCE\xBBx.\xCE"
 #"\xBBy.\xCE\xBBsel.sel x y)((\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) p)"
) 0 0 28 29 1 #"\n"
0 0 18 3 124
(17
 #"; ((\xCE\xBBn.\xCE\xBBf.\xCE\xBBx.f (n f x))((\xCE\xBBp.p (\xCE\xBBx."
 #"\xCE\xBBy.y)) p))) ((\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)(\xCE"
 #"\xBBf.\xCE\xBBx.x) (\xCE\xBBf.\xCE\xBBx.x)))) n) n (\xCE\xBBf.\xCE"
 #"\xBBx.f x))))"
) 0 0 28 29 1 #"\n"
0 0 18 3 15 #";(\316\273f.\316\273x.x)))\""
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 114
(18
 #";\"(\xCE\xBBfac.fac (\xCE\xBBf.\xCE\xBBx.f (f (f (f (f (f x))))))) (("
 #"\xCE\xBBbody-proc.(\xCE\xBBfX.fX fX) (\xCE\xBBfX. (\xCE\xBBf.body-pro"
 #"c f) (\xCE\xBBx.fX fX x))"
) 0 0 28 29 1 #"\n"
0 0 18 3 61
(19
 #";(\xCE\xBBn.(\xCE\xBBn.n (\xCE\xBBx.\xCE\xBBx.\xCE\xBBy.y) (\xCE\xBBx"
 #".\xCE\xBBy.x)) n (\xCE\xBBd.\xCE\xBBf.\xCE\xBBx.f x)"
) 0 0 28 29 1 #"\n"
0 0 18 3 73
(20
 #";(\xCE\xBBd.(\xCE\xBBn.\xCE\xBBm.m ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn"
 #".\xCE\xBBf.\xCE\xBBx.f (n f x)) n) n) (\xCE\xBBf.\xCE\xBBx.x)) n"
) 0 0 28 29 1 #"\n"
0 0 18 3 73
(21
 #";(fac ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn.(\xCE\xBBp.p (\xCE\xBBx.\xCE"
 #"\xBBy.x))(n (\xCE\xBBp.(\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)"
) 0 0 28 29 1 #"\n"
0 0 18 3 74
(22
 #";((\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) p) ((\xCE\xBBn.\xCE\xBBf.\xCE"
 #"\xBBx.f (n f x))((\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) p)))"
) 0 0 28 29 1 #"\n"
0 0 18 3 88
(23
 #";((\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)(\xCE\xBBf.\xCE\xBBx.x) ("
 #"\xCE\xBBf.\xCE\xBBx.x)))) n) n (\xCE\xBBf.\xCE\xBBx.f x)))) (\xCE\xBB"
 #"f.\xCE\xBBx.x)))\""
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 18 3 90
(24
 #";\"(\xCE\xBBfac.fac (\xCE\xBBf.\xCE\xBBx.f (f (f (f (f (f x))))))) ("
 #"\xCE\xBBn.(\xCE\xBBn.n (\xCE\xBBx.\xCE\xBBx.\xCE\xBBy.y) (\xCE\xBBx."
 #"\xCE\xBBy.x)) n"
) 0 0 28 29 1 #"\n"
0 0 18 3 91
(25
 #";(\xCE\xBBd.\xCE\xBBf.\xCE\xBBx.f x) (\xCE\xBBd.(\xCE\xBBn.\xCE\xBBm."
 #"m ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn.\xCE\xBBf.\xCE\xBBx.f (n f x)) n"
 #") n) (\xCE\xBBf.\xCE\xBBx.x)) n"
) 0 0 28 29 1 #"\n"
0 0 18 3 96
(26
 #";(fac ((\xCE\xBBn.\xCE\xBBm.m (\xCE\xBBn.(\xCE\xBBp.p (\xCE\xBBx.\xCE"
 #"\xBBy.x))(n (\xCE\xBBp.(\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)(("
 #"\xCE\xBBp.p (\xCE\xBBx.\xCE\xBBy.y)) p)"
) 0 0 28 29 1 #"\n"
0 0 18 3 50
(27
 #";((\xCE\xBBn.\xCE\xBBf.\xCE\xBBx.f (n f x))((\xCE\xBBp.p (\xCE\xBBx."
 #"\xCE\xBBy.y)) p)))"
) 0 0 28 29 1 #"\n"
0 0 18 3 87
(28
 #";((\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)(\xCE\xBBf.\xCE\xBBx.x) ("
 #"\xCE\xBBf.\xCE\xBBx.x)))) n) n (\xCE\xBBf.\xCE\xBBx.f x)))) (\xCE\xBB"
 #"f.\xCE\xBBx.x))\""
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 110
(29
 #";\"(\xCE\xBBfac.fac (\xCE\xBBf.\xCE\xBBx.f (f (f (f (f (f x)))))))("
 #"\xCE\xBBbody-proc.(\xCE\xBBfX.fX fX)(\xCE\xBBfX.\xCE\xBBf.body-proc f"
 #") (\xCE\xBBx.fX fX x))\""
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 18 3 78
(30
 #";\"(\xCE\xBBfac.fac (\xCE\xBBf.\xCE\xBBx.f (f (f (f (f (f x)))))))("
 #"\xCE\xBBn.zero ? n (\xCE\xBBd.\xCE\xBBf.\xCE\xBBx.f x)"
) 0 0 28 29 1 #"\n"
0 0 18 3 73 20 0 0 28 29 1 #"\n"
0 0 18 3 96 26 0 0 28 29 1 #"\n"
0 0 18 3 86
(31
 #";((\xCE\xBBn.\xCE\xBBf.\xCE\xBBx.f (n f x))((\xCE\xBBp.p (\xCE\xBBx."
 #"\xCE\xBBy.y)) p))) ((\xCE\xBBx.\xCE\xBBy.\xCE\xBBsel.sel x y)(\xCE"
 #"\xBBf.\xCE\xBBx.x)"
) 0 0 28 29 1 #"\n"
0 0 18 3 51
(32
 #";(\xCE\xBBf.\xCE\xBBx.x)))) n) n (\xCE\xBBf.\xCE\xBBx.f x)))) (\xCE"
 #"\xBBf.\xCE\xBBx.x))\""
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #" "
0 0 28 29 1 #"\n"
0 0 18 3 116
(33
 #";shift =>  (lamE 'p (appE (appE (desugar (pairS)) (appE (desugar (snd"
 #"s)) (idE 'p))) (appE (desugar (sndS)) idE 'p)))"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #" "
0 0 18 3 18 #";\316\273x.\316\273y.x\342\211\241 true"
0 0 28 29 1 #"\n"
0 0 18 3 19 #";\316\273x.\316\273y.y\342\211\241 false"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 17 #"                 "
0 0 28 3 25 #"                         "
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 7 #"desugar"
0 0 28 3 1 #" "
0 0 20 3 17 #"\"not implemented\""
0 0 28 3 4 #")]))"
0 0 28 29 1 #"\n"
0 0 18 3 66
(34
 #";((\xCE\xBBbody-proc.(\xCE\xBBfX.fX fX)(\xCE\xBBfX.(\xCE\xBBf.body-pr"
 #"ocf) (\xCE\xBBx.fX fX x))))"
) 0 0 28 29 1 #"\n"
0 0 18 3 66
(35
 #";((\xCE\xBBbody-proc.(\xCE\xBBfX.fX fX) (\xCE\xBBfX.(\xCE\xBBf.body-p"
 #"roc f)(\xCE\xBBx.fX fX x)))"
) 0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 6 #"mk-rec"
0 0 28 3 3 #") ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 9 #"body-proc"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 29 1 #"\n"
0 0 28 3 36 #"                                   ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 2 #"fX"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 2 #"fX"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 2 #"fX"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 36 #"                                   ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 2 #"fX"
0 0 28 29 1 #"\n"
0 0 28 3 43 #"                                         ( "
0 0 14 3 4 #"appE"
0 0 28 29 1 #"\n"
0 0 28 3 44 #"                                           ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 3 #" ( "
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 9 #"body-proc"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"f"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 44 #"                                           ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 2 #"fX"
0 0 28 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 2 #"fX"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 8 #"))))))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 18 3 7 #"; (appE"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                        "
0 0 18 3 39 #"; (lamE 'fX (appE (idE 'fX) (idE 'fX)))"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 18 3 71
(36
 #";      (lamE 'fX (appE (appE (appE (lamE 'f ( idE 'body-proc) (idE 'f"
 #"))"
) 0 0 28 29 1 #"\n"
0 0 28 3 26 #"                          "
0 0 18 3 97
(37
 #";  (lamE 'x (appE (appE (idE 'fX) (idE 'fX)) (idE 'x)))))))))        "
 #"                            "
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 5 #"shift"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"pairS"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"sndS"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 5 #"))) ("
0 0 14 3 4 #"appE"
0 0 28 3 3 #"  ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"add1S"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 4 #"sndS"
0 0 28 3 4 #")) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"p"
0 0 28 3 6 #"))))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 18 #";;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 19 #"; Interpr\303\251tation ;"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 18 #";;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 14 #"; Substitution"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 2 #" ["
0 0 14 3 4 #"what"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"] ["
0 0 16 3 3 #"for"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 3 #"] ["
0 0 14 3 2 #"in"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 1 #" "
0 0 14 3 2 #"in"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 1 #" "
0 0 16 3 3 #"for"
0 0 28 3 2 #") "
0 0 14 3 4 #"what"
0 0 28 3 1 #" "
0 0 14 3 2 #"in"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 16 3 3 #"for"
0 0 28 3 2 #") "
0 0 14 3 2 #"in"
0 0 28 3 2 #" ("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 1 #" "
0 0 14 3 4 #"what"
0 0 28 3 1 #" "
0 0 16 3 3 #"for"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"appE"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 3 #") ("
0 0 14 3 4 #"appE"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 1 #" "
0 0 14 3 4 #"what"
0 0 28 3 1 #" "
0 0 16 3 3 #"for"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 3 #") ("
0 0 14 3 5 #"subst"
0 0 28 3 1 #" "
0 0 14 3 4 #"what"
0 0 28 3 1 #" "
0 0 16 3 3 #"for"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 5 #"))]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 48
#"; Interpr\303\251teur (pas de d\303\251cente dans un lambda)"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 2 #" ["
0 0 14 3 1 #"e"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"appE"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"           [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 28 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 2 #") "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 3 3 #"])]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 3 3 #"]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 68
(38
 #"; Concat\xC3\xA9nation de cha\xC3\xAEnes de caract\xC3\xA8res contenu"
 #"es dans une liste"
) 0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 14 #"strings-append"
0 0 28 3 2 #" ["
0 0 14 3 7 #"strings"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 28 3 1 #" "
0 0 14 3 6 #"String"
0 0 28 3 4 #")]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"String"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 5 #"foldr"
0 0 28 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 28 3 1 #" "
0 0 20 3 2 #"\"\""
0 0 28 3 1 #" "
0 0 14 3 7 #"strings"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 43 #"; Affichage lisible d'une lambda-expression"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"expr->string"
0 0 28 3 2 #" ["
0 0 14 3 1 #"e"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"String"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 14 #"symbol->string"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 14 #"strings-append"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 20 3 4 #"\"\316\273\""
0 0 28 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 2 #") "
0 0 20 3 3 #"\".\""
0 0 28 3 2 #" ("
0 0 14 3 12 #"expr->string"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"appE"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 16 3 3 #"let"
0 0 28 3 3 #" (["
0 0 14 3 10 #"fun-string"
0 0 28 3 2 #" ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 5 #"lamE?"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                               ("
0 0 14 3 14 #"strings-append"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 20 3 3 #"\"(\""
0 0 28 3 2 #" ("
0 0 14 3 12 #"expr->string"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 2 #") "
0 0 20 3 3 #"\")\""
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                               ("
0 0 14 3 12 #"expr->string"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"               ["
0 0 14 3 10 #"arg-string"
0 0 28 3 2 #" ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 4 #"idE?"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                               ("
0 0 14 3 12 #"expr->string"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                               ("
0 0 14 3 14 #"strings-append"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 20 3 3 #"\"(\""
0 0 28 3 2 #" ("
0 0 14 3 12 #"expr->string"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 2 #") "
0 0 20 3 3 #"\")\""
0 0 28 3 5 #")))])"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 5 #"lamE?"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 3 #") ("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 4 #"idE?"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"               ("
0 0 14 3 13 #"string-append"
0 0 28 3 1 #" "
0 0 14 3 10 #"fun-string"
0 0 28 3 1 #" "
0 0 14 3 10 #"arg-string"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"               ("
0 0 14 3 14 #"strings-append"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 14 3 10 #"fun-string"
0 0 28 3 1 #" "
0 0 20 3 3 #"\" \""
0 0 28 3 1 #" "
0 0 14 3 10 #"arg-string"
0 0 28 3 7 #"))))]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 49 #"; Transforme une expression en nombre si possible"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"expr->number"
0 0 28 3 2 #" ["
0 0 14 3 1 #"e"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Number"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 1 #"f"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"           [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 14 3 8 #"destruct"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-x"
0 0 28 3 1 #" "
0 0 14 3 1 #"f"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"expr->number"
0 0 28 3 1 #" "
0 0 20 3 14 #"\"not a number\""
0 0 28 3 4 #")])]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"expr->number"
0 0 28 3 1 #" "
0 0 20 3 14 #"\"not a number\""
0 0 28 3 4 #")]))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 42 #"; Compte le nombre d'application de f \303\240 x"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"destruct"
0 0 28 3 2 #" ["
0 0 14 3 1 #"e"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"] ["
0 0 14 3 1 #"f"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 3 #"] ["
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 6 #"Number"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 21 #"                     "
0 0 24 3 1 #"0"
0 0 28 29 1 #"\n"
0 0 28 3 22 #"                     ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"expr->number"
0 0 28 3 1 #" "
0 0 20 3 14 #"\"not a number\""
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 3 #"par"
0 0 28 3 1 #" "
0 0 14 3 4 #"body"
0 0 28 3 3 #") ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"expr->number"
0 0 28 3 1 #" "
0 0 20 3 14 #"\"not a number\""
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"appE"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 3 #") ("
0 0 14 3 2 #"if"
0 0 28 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 3 #"fun"
0 0 28 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 14 3 1 #"f"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                            ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #" ("
0 0 14 3 8 #"destruct"
0 0 28 3 1 #" "
0 0 14 3 3 #"arg"
0 0 28 3 1 #" "
0 0 14 3 1 #"f"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                            ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"expr->number"
0 0 28 3 1 #" "
0 0 20 3 14 #"\"not a number\""
0 0 28 3 5 #"))]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 51 #"; Transforme une expression en bool\303\251en si possible"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 13 #"expr->boolean"
0 0 28 3 2 #" ["
0 0 14 3 1 #"e"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 3 #"]) "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 1 #"e"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"           [("
0 0 14 3 4 #"lamE"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-y"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 16 3 9 #"type-case"
0 0 28 3 1 #" "
0 0 14 3 3 #"Exp"
0 0 28 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 28 3 1 #" "
0 0 14 3 6 #"body-y"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"              [("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 3 #") ("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 27 #"                         (("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 2 #") "
0 0 24 3 2 #"#t"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 27 #"                         (("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 2 #") "
0 0 24 3 2 #"#f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 26 #"                         ("
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 13 #"expr->boolean"
0 0 28 3 1 #" "
0 0 20 3 15 #"\"not a boolean\""
0 0 28 3 4 #")))]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 13 #"expr->boolean"
0 0 28 3 1 #" "
0 0 20 3 15 #"\"not a boolean\""
0 0 28 3 4 #")])]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 13 #"expr->boolean"
0 0 28 3 1 #" "
0 0 20 3 15 #"\"not a boolean\""
0 0 28 3 4 #")])]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 5 #"error"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 13 #"expr->boolean"
0 0 28 3 1 #" "
0 0 20 3 15 #"\"not a boolean\""
0 0 28 3 4 #")]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 9 #";;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 9 #"; Tests ;"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 9 #";;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 12 #"expr->number"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 14 #"interp-boolean"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 13 #"expr->boolean"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 14 3 4 #"expr"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 14 3 4 #"test"
0 0 28 3 1 #"("
0 0 14 3 12 #"expr->string"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"lambda"
0 0 28 3 1 #"{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 1 #"}"
0 0 14 3 4 #"body"
0 0 28 3 1 #"}"
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 1 #" "
0 0 14 3 1 #"c"
0 0 28 3 4 #"})))"
0 0 20 3 26 #"\"(\316\273x.\316\273y.\316\273z.body) a b c\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ("
0 0 14 3 4 #"test"
0 0 28 3 1 #"("
0 0 14 3 12 #"expr->string"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"lambda"
0 0 28 3 1 #"{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 14 3 1 #"u"
0 0 28 3 1 #" "
0 0 14 3 1 #"v"
0 0 28 3 1 #" "
0 0 14 3 1 #"w"
0 0 28 3 1 #"}"
0 0 14 3 4 #"body"
0 0 28 3 1 #"}"
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 1 #" "
0 0 14 3 1 #"c"
0 0 28 3 1 #" "
0 0 14 3 1 #"r"
0 0 28 3 1 #" "
0 0 14 3 1 #"s"
0 0 28 3 1 #" "
0 0 14 3 1 #"t"
0 0 28 3 4 #"})))"
0 0 20 3 44
(39
 #"\"(\xCE\xBBx.\xCE\xBBy.\xCE\xBBz.\xCE\xBBu.\xCE\xBBv.\xCE\xBBw.body) "
 #"a b c r s t\""
) 0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 12 #"expr->string"
0 0 28 3 3 #" ( "
0 0 14 3 7 #"desugar"
0 0 28 3 3 #" ( "
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 16 3 3 #"let"
0 0 28 3 3 #" {["
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 3 #"] ["
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 3 #"] ["
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 14 3 1 #"c"
0 0 28 3 3 #"]} "
0 0 14 3 4 #"body"
0 0 28 3 5 #" })))"
0 0 28 29 1 #"\n"
0 0 20 3 26 #"\"(\316\273x.\316\273y.\316\273z.body) a b c\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 3 #"`10"
0 0 28 3 2 #") "
0 0 24 3 2 #"10"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 4 #"add1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"3"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 3 #"}) "
0 0 24 3 2 #"12"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 14 #"interp-boolean"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #" "
0 0 14 3 4 #"true"
0 0 28 3 3 #" ) "
0 0 24 3 2 #"#t"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 14 #"interp-boolean"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #" "
0 0 14 3 5 #"false"
0 0 28 3 3 #" ) "
0 0 24 3 2 #"#f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 14 3 4 #"true"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 14 3 5 #"false"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 14 #"interp-boolean"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 5 #"zero?"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 3 #"}) "
0 0 24 3 2 #"#t"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 14 #"interp-boolean"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 5 #"zero?"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}) "
0 0 24 3 2 #"#f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 6 #"interp"
0 0 28 3 3 #" ( "
0 0 14 3 7 #"desugar"
0 0 28 3 3 #" ( "
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 3 #"fst"
0 0 28 3 3 #" { "
0 0 14 3 4 #"pair"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 8 #"} }))) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"a"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 6 #"interp"
0 0 28 3 3 #" ( "
0 0 14 3 7 #"desugar"
0 0 28 3 3 #" ( "
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 3 #"snd"
0 0 28 3 3 #" { "
0 0 14 3 4 #"pair"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 14 3 1 #"b"
0 0 28 3 8 #"} }))) ("
0 0 14 3 3 #"idE"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"b"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 4 #"sub1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 4 #"sub1"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"4"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 4 #"sub1"
0 0 28 3 1 #" "
0 0 24 3 2 #"12"
0 0 28 3 3 #"}) "
0 0 24 3 2 #"11"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 4 #"sub1"
0 0 28 3 1 #" "
0 0 24 3 2 #"20"
0 0 28 3 3 #"}) "
0 0 24 3 2 #"19"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 14 3 4 #"sub1"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"( "
0 0 14 3 12 #"expr->string"
0 0 28 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 16 3 6 #"letrec"
0 0 28 3 3 #" {["
0 0 14 3 3 #"fac"
0 0 28 3 3 #" { "
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" {"
0 0 14 3 1 #"n"
0 0 28 3 4 #"} { "
0 0 14 3 2 #"if"
0 0 28 3 3 #" { "
0 0 14 3 5 #"zero?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #"}"
0 0 24 3 1 #"1"
0 0 28 3 1 #"{"
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 3 #" { "
0 0 14 3 3 #"fac"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 13 #"} } } } }]}{ "
0 0 14 3 3 #"fac"
0 0 28 3 1 #" "
0 0 24 3 1 #"6"
0 0 28 3 6 #"} })))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 3 #" ( "
0 0 14 3 13 #"interp-number"
0 0 28 3 1 #" "
0 0 24 3 1 #"`"
0 0 28 3 2 #"{ "
0 0 16 3 6 #"letrec"
0 0 28 3 3 #" {["
0 0 14 3 3 #"fac"
0 0 28 3 3 #" { "
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" {"
0 0 14 3 1 #"n"
0 0 28 3 4 #"} { "
0 0 14 3 2 #"if"
0 0 28 3 3 #" { "
0 0 14 3 5 #"zero?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #"}"
0 0 24 3 1 #"1"
0 0 28 3 1 #"{"
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 3 #" { "
0 0 14 3 3 #"fac"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 13 #"} } } } }]}{ "
0 0 14 3 3 #"fac"
0 0 28 3 1 #" "
0 0 24 3 1 #"6"
0 0 28 3 4 #"} })"
0 0 24 3 3 #"720"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 13 #"interp-number"
0 0 24 3 1 #"`"
0 0 28 3 1 #"{"
0 0 16 3 6 #"letrec"
0 0 28 3 3 #" {["
0 0 14 3 3 #"fac"
0 0 28 3 2 #" {"
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" {"
0 0 14 3 1 #"n"
0 0 28 3 3 #"} {"
0 0 16 3 6 #"lambda"
0 0 28 3 2 #" {"
0 0 14 3 1 #"a"
0 0 28 3 1 #"}"
0 0 28 29 1 #"\n"
0 0 28 3 38 #"                                     {"
0 0 14 3 2 #"if"
0 0 28 3 2 #" {"
0 0 14 3 5 #"zero?"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #"}"
0 0 28 29 1 #"\n"
0 0 28 3 41 #"                                         "
0 0 14 3 1 #"a"
0 0 28 29 1 #"\n"
0 0 28 3 42 #"                                         ("
0 0 14 3 3 #"fac"
0 0 28 3 2 #" ("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"n"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #")("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"a"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 10 #")) }}}]}  "
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 14 3 3 #"fac"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 4 #"}}) "
0 0 24 3 2 #"13"
0 0 28 3 2 #") "
0           0
